/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.CourseInstructor;

import BLL.Course.CourseBLL;
import BLL.Person.CourseInstructorBLL;
import BLL.Person.TeacherBLL;
import DAL.CourseInstructor.CourseInstructor;
import DAL.CourseInstructor.CourseInstructorDAL;
import DAL.Teacher.Teacher;
import UI.StudentGrade.studenGradePanel;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTextField;

/**
 *
 * @author dongt
 */
public class courseInstructorPanel extends javax.swing.JPanel {

    DefaultTableModel dtm;
    CourseInstructorBLL c = new CourseInstructorBLL();
    CourseInstructorDAL cal = new CourseInstructorDAL();

    public courseInstructorPanel() {
        initComponents();
        CourseInstructorBLL c = new CourseInstructorBLL();
        dtm = (DefaultTableModel) jtCI.getModel();
        fillTable();

    }

    private void fillTable() {
        dtm.setRowCount(0);

        List<CourseInstructor> ciList = c.readCourseInstructors();

        for (CourseInstructor ci : ciList) {
            dtm.addRow(new Object[]{ci.getCourseID(), ci.getPersonID()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCI = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        txtCourseId = new javax.swing.JTextField();
        txtTitleName = new javax.swing.JTextField();
        txtPersonId = new javax.swing.JTextField();
        txtTeacherName = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(950, 513));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 204, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("COURSE INSTRUCTOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel5)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 161, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/icon/add.png"))); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 161, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/icon/delete (3).png"))); // NOI18N
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 161, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/icon/edit-st.png"))); // NOI18N
        jButton3.setText("EDIT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 161, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/icon/search (2).png"))); // NOI18N
        jButton4.setText("SEARCH");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("COURSE ID:");

        jLabel2.setText("TITLE NAME:");

        jLabel3.setText("PERSON ID:");

        jLabel4.setText("TEACHER NAME:");

        jtCI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course ID", "Title Name", "Person ID", "Teacher Name"
            }
        ));
        jtCI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCIMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtCI);

        jButton5.setBackground(new java.awt.Color(0, 161, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/icon/reset.png"))); // NOI18N
        jButton5.setText("RESET");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTeacherName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTitleName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPersonId))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton5)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(50, 50, 50)
                        .addComponent(jButton3)
                        .addGap(47, 47, 47)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTitleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTeacherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        String searchQuery = txtSearch.getText().trim();
        if (!searchQuery.isEmpty()) {
            List<CourseInstructor> searchResult = null;
            try {
                searchResult = c.getPersonIDFromCourseInstructor(searchQuery);
            } catch (SQLException ex) {
                Logger.getLogger(courseInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            // Xóa dữ liệu cũ trong bảng
            dtm.setRowCount(0);
            // Hiển thị kết quả tìm kiếm trên bảng
            for (CourseInstructor ci : searchResult) {
                dtm.addRow(ci.toArray());
            }
        } else {
            // Nếu trường tìm kiếm trống, hiển thị tất cả sinh viên
            fillTable();
        }
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int result = 0;
        String courseID = txtCourseId.getName();
        String personID = txtPersonId.getName();
        int courseid = Integer.parseInt(courseID);
        int personid = Integer.parseInt(personID);
        try {
            result = c.addCourseInstructor(new CourseInstructor(courseid, personid));
        } catch (SQLException ex) {
            Logger.getLogger(courseInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (result > 0) {
            JOptionPane.showMessageDialog(this, "Đã thêm dữ liệu thành công!");

            fillTable();

            txtCourseId.setText("");
            txtPersonId.setText("");
            txtTitleName.setText("");
            txtTeacherName.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Thêm dữ liệu thất bại!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCourseId.setText("");
        txtTitleName.setText("");
        txtPersonId.setText("");
        txtTeacherName.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
//        String titleName = txtTitleName.getName();
//        String teacherName = txtTeacherName.getName();
//
////         Gọi phương thức để sửa dữ liệu trong BLL
////        boolean edited = c.updateCourseInstructor(new CourseInstructor(int CourseID, int PersonID));
//        if (edited) {
//            // Nếu sửa thành công, cập nhật lại bảng jtStudentGrade
//            fillTable();
//            JOptionPane.showMessageDialog(this, "Data updated successfully!");
//        } else {
//            JOptionPane.showMessageDialog(this, "Failed to update data!");
//        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = jtCI.getSelectedRow();
        if (selectedRow != -1) { // Kiểm tra xem có hàng được chọn không
            int courseID = Integer.parseInt(jtCI.getValueAt(selectedRow, 0).toString());
            boolean success = c.deleteCourseInstructor(courseID);
            if (success) {
                JOptionPane.showMessageDialog(this, "Data deleted successfully.");
                fillTable(); // Cập nhật lại bảng jtStudentGrade
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete data.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchQuery = txtSearch.getText().trim();
        if (!searchQuery.isEmpty()) {
            try {
                List<CourseInstructor> searchResult = c.getPersonIDFromCourseInstructor(searchQuery);
                // Xóa dữ liệu cũ trong bảng
                dtm.setRowCount(0);
                // Hiển thị kết quả tìm kiếm trên bảng
                for (CourseInstructor ci : searchResult) {
                    dtm.addRow(ci.toArray());
                }
            } catch (SQLException ex) {
                Logger.getLogger(courseInstructorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            // Nếu trường tìm kiếm trống, hiển thị tất cả sinh viên
            fillTable();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jtCIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCIMouseClicked
        int i = jtCI.getSelectedRow();
        if (i >= 0) {
            txtCourseId.setText(dtm.getValueAt(i, 0).toString());
            txtTitleName.setText(dtm.getValueAt(i, 1).toString());
            txtPersonId.setText(dtm.getValueAt(i, 2).toString());
            txtTeacherName.setText(dtm.getValueAt(i, 3).toString());
        }
    }//GEN-LAST:event_jtCIMouseClicked
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new courseInstructorPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtCI;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtPersonId;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTeacherName;
    private javax.swing.JTextField txtTitleName;
    // End of variables declaration//GEN-END:variables
}
